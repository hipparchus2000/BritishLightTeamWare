#!/bin/sh
# the next line restarts using wish \
exec wish4.1 "$0" "$@"

#BLT Teamware in Tk/Tcl Forms generate documents that are displayed in views. Data can be replicated.
#Copyright (C) 2000 Jeff Davies.

#This program is free software; you can redistribute it and/or
#modify it under the terms of the GNU General Public License
#as published by the Free Software Foundation; either version 2
#of the License, or (at your option) any later version.

#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with this program; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA&nbsp; 02111-1307,
#USA.


#Jeff Davies, Minyllan, Llandre, Bow Street, Ceredigion, SY24 5BZ
#+44(0) 1970 611729/820865   jeff@llandre.freeserve.co.uk
#www.llandre.freeserve.co.uk

set font -*-Helvetica-Medium-R-Normal--*-140-*-*-*-*-*-*

set tcl_precision 10

set fieldwidth 40

label .msg -font $font -wraplength 6i -justify left -text "BLT is Light Teamware in Tk/Tcl: Form Designer 0.01"
pack .msg -side top


#=============== BLT DOCUMENT EDITOR ==================
frame .doc -width 100 -relief raised -borderwidth 5 

#============ When run, form name is passed, and document name ======
 set dbdirpath [lindex $argv 0]
 set theformname [lindex $argv 1]
 set documentid [lindex $argv 2]

 if {$theformname==""} {return 0}
 if {$documentid==""} {return 0} 

 if {$documentid=="new"} {
   set myclock [clock scan "now"]
   set myclkstr [clock format $myclock -format "%Y%m%d-%H%M%S"]
   #set mysystem [id host]
   #set myuser [id user]
   set mysystem [exec "hostname"]
   set myuser [exec "whoami"]
   set documentid $myclkstr-$myuser-$mysystem
   
 }


  

 frame .doc.formname
  label .doc.formname.fieldtext -text "Form Name" -bg Grey -fg Blue  -width $fieldwidth
  label .doc.formname.value -text $theformname -bg Grey -fg Black  -width $fieldwidth   
  pack .doc.formname.fieldtext -side left -expand yes
  pack .doc.formname.value -side left -expand yes
  pack .doc.formname

 frame .doc.docid
  label .doc.docid.fieldtext -text "Document ID" -bg Grey -fg Blue  -width $fieldwidth
  label .doc.docid.value -text $documentid -bg Grey -fg Black  -width $fieldwidth   
  pack .doc.docid.fieldtext -side left -expand yes
  pack .doc.docid.value -side left -expand yes
  pack .doc.docid

 set dbpath "database path = "
 append dbpath $dbdirpath
 frame .doc.dbdirpath
 label .doc.dbdirpath.value -text $dbpath -bg Grey -fg Black
 pack .doc.dbdirpath.value
 pack .doc.dbdirpath


# in here also date created, and last modified date.


 set num 0

 set filepath $dbdirpath
 append filepath "/forms/"
 append filepath $theformname

 set myfile [open $filepath r]
 set readdata [gets $myfile]

 while {$readdata !="End-of-Data " } {
  set numstr [format "%d" $num]
  frame .doc.frame$numstr
  label .doc.frame$numstr.fieldtext -text $readdata -bg Black -fg Red  -width $fieldwidth
  entry .doc.frame$numstr.value -textvariable value$readdata -bg White -fg Black  -width $fieldwidth 
  pack .doc.frame$numstr.fieldtext -side left -expand yes
  pack .doc.frame$numstr.value -side left -expand yes
  pack .doc.frame$numstr -side top -expand yes

  #tk_dialog .dlg $numstr $readdata "" 0 "OK" "CANCEL"
  set readdata [gets $myfile]
  incr num 1
 }

 set totalfields $num


 pack .doc


proc savefile "" {
  global documentid
  global totalfields
  global dbdirpath

  set filepath $dbdirpath
  append filepath "/documents/"
  append filepath $documentid

  set myfile [open $filepath w]
 
  puts $myfile [.doc.formname.value cget -text]
 
  set num 0

  while {$num <$totalfields} {

    set numstr [format "%d" $num]  
    puts $myfile [.doc.frame$numstr.fieldtext cget -text] 
    puts $myfile [.doc.frame$numstr.value get]
    incr num 1
  }
    
  puts $myfile "End-of-Data \n\r"
  close $myfile
}

proc loadfile "" {
  global documentid
  global totalfields
  global dbdirpath

  set filepath $dbdirpath
  append filepath "/documents/"
  append filepath $documentid

  set myfile [open $filepath r]

  set formname [gets $myfile]
  #note the above is throwaway here

  set num 0
  set fieldname [gets $myfile]

  while {$fieldname!="End-of-Data "} {
    
    set fieldvalue [gets $myfile]

    #okay we have got both fieldname and value now

    for {set num 0} {$num<$totalfields} {incr num 1} {
      set numstr [format "%d" $num]
      set curfieldname [.doc.frame$numstr.fieldtext cget -text]
      if {$curfieldname==$fieldname} {
        .doc.frame$numstr.value delete 0 end
        .doc.frame$numstr.value insert 0 $fieldvalue
      }
    }

    set fieldname [gets $myfile]
  
    incr num 1
  }

  close $myfile
}

catch {
  loadfile
} myerrcode 


frame .adrbuttons

button .adrbuttons.load -text "Load" -bg Yellow -width 10 \
	-command "loadfile"
button .adrbuttons.save -text "Save" -bg Yellow -width 10 \
	-command "savefile"

pack .adrbuttons .adrbuttons.load .adrbuttons.save  -side left -expand yes -pady 2


#======================BLT DOC EDITOR =================


















